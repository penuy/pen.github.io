<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>类与对象</title>
      <link href="/2023/10/10/java%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
      <url>/2023/10/10/java%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h1><h2 id="类与对象的创建"><a href="#类与对象的创建" class="headerlink" title="类与对象的创建"></a>类与对象的创建</h2><h3 id="类与对象的关系"><a href="#类与对象的关系" class="headerlink" title="类与对象的关系"></a>类与对象的关系</h3><p><strong>类是一种抽象的数据类型，它是对某一事务整体描述/定义，但是并不能代表某一个具体的事务。</strong></p><p>类其实就是一个模板，比如说类就好比一张房子的设计图纸，或者说是一个倒印模具，创建一个类就好比设计一张图纸，刻一个模板。对象就好比一座建好的房子，一个成型的模型，无疑想要一座房子或者一个模型都先需要一张图纸和一个模板，而这就是类和对象的关系。</p><p>类如person类，pet类等，是一种抽象的数据类型。<strong>而对象是抽象的具体实例</strong>，例如张三就是person类的一个具体实例。对象能够体现出特点，展现出功能的是具体的实例，而不是一个抽象的概念。</p><h3 id="创建和初始化对象"><a href="#创建和初始化对象" class="headerlink" title="创建和初始化对象"></a>创建和初始化对象</h3><p><strong>使用new关键字创建对象</strong></p><p>使用new关键字创建的时候，处了分配内存空间之外，还会给创建好的对象进行默认的初始化以及对类中构造器的调用</p><p>创建对象内存分析可参考：[java面向对象-创建对象内存分析（jvm）](<a href="https://blog.csdn.net/qq_60264381/article/details/119276824">java面向对象-创建对象内存分析（jvm）_使得 student之外的任何测试类jvm内存中只有唯一一个student的对象_蚂蚁牙黑147的博客-CSDN博客</a>)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性：字段</span></span><br><span class="line">    String name;<span class="comment">//null</span></span><br><span class="line">    <span class="type">int</span> age;<span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;在学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类：抽象的，实例化</span></span><br><span class="line">        <span class="comment">//类实例化后会返回一个实例化的对象</span></span><br><span class="line">        <span class="comment">//student对象就是Student类实例化返回的对象</span></span><br><span class="line"></span><br><span class="line">        <span class="type">student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(student.age);<span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">        student.age=<span class="number">28</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(student.age);<span class="comment">//28</span></span><br><span class="line"></span><br><span class="line">        System.out.println(student.name);<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        student.name=<span class="string">&quot;李明&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(student.name);<span class="comment">//李明</span></span><br><span class="line"></span><br><span class="line">        student.study();<span class="comment">//在学习</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造器（构造方法）"><a href="#构造器（构造方法）" class="headerlink" title="构造器（构造方法）"></a>构造器（构造方法）</h2><p>类中的构造器也称构造方法，是在进行创建对象的时候必须要调用的。并且构造器有以下两个特点：</p><ol><li>必须和类的名字相同</li><li>必须没有返回类型，也不能写void</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">person</span> &#123;</span><br><span class="line">    <span class="comment">//一个类即使什么都不写，也会有一个构造方法，即类的无参构造</span></span><br><span class="line">    <span class="comment">//当存在有参构造器时，若要使用无参构造，无参构造器不可省略</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//无参构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">person</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&quot;李无参&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">person</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">person</span>();</span><br><span class="line">        <span class="type">person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">person</span>(<span class="string">&quot;李有参&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(p1.name);<span class="comment">//李无参</span></span><br><span class="line">        System.out.println(p2.name);<span class="comment">//李有参</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 面向对象 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>什么是面向对象</title>
      <link href="/2023/10/07/java%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2023/10/07/java%E4%B9%8B%E8%B7%AF/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h1><h3 id="面向过程-amp-面向对象"><a href="#面向过程-amp-面向对象" class="headerlink" title="面向过程&amp;面向对象"></a>面向过程&amp;面向对象</h3><h4 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h4><p>面向过程是一种以事件为中心的编程思想，编程的时候把解决问题的步骤分析出来，然后用函数把这些步骤实现，在一步一步的具体步骤中再按顺序调用函数。步骤清晰简单，第一步做什么，第二步做什么….</p><p>面向过程适合处理一些较为简单的问题</p><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><p>在日常生活或编程中，简单的问题可以用面向过程的思路来解决，直接有效，但是当问题的规模变得更大时，用面向过程的思想是远远不够的。所以慢慢就出现了面向对象的编程思想。世界上有很多人和事物，每一个都可以看做一个对象，而每个对象都有自己的属性和行为，对象与对象之间通过方法来交互。面向对象是一种以“对象”为中心的编程思想，把要解决的问题分解成各个对象，建立对象的目的不是为了完成一个步骤，而是为了描叙某个对象在整个解决问题的步骤中的属性和行为。</p><p>面向对象思想：物以类聚，<strong>分类</strong>的思维模式，思考问题首先会解决需要那些分类，然后对这些分类进行单独思考。最后，才对某个分类下的细节进行面向过程的探索。</p><p>面向对象适合处理复杂的问题，适合多人协作的问题</p><p><strong>对于描述复杂的事物，为了从宏观上合理分析，我们需要使用面向对象的思路来分析整个系统。但是，具体到微观操作，仍然需要面向过程的思路去处理。</strong></p><h4 id="什么是面向对象-1"><a href="#什么是面向对象-1" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h4><p>面向对象编程（<strong>OOP</strong>，Object Oriented Programming）</p><p>面向对象编程的本质就是：<strong>以类的方式组织代码，以对象的组织（封装）数据。</strong></p><h4 id="面向对象的三大特性"><a href="#面向对象的三大特性" class="headerlink" title="面向对象的三大特性"></a>面向对象的三大特性</h4><p>1、封装<br>隐藏对象的属性和实现细节，仅对外提供公共访问方式，将变化隔离，便于使用，提高复用性和安全性。</p><p>2、继承<br>提高代码复用性；继承是多态的前提。</p><p>3、多态<br>父类或接口定义的引用变量可以指向子类或具体实现类的实例对象。提高了程序的拓展性。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7%E4%BA%94%E5%A4%A7%E5%8E%9F%E5%88%99.png" alt="image-20231017135920181"></p><h4 id="面向过程和面向对象的区别"><a href="#面向过程和面向对象的区别" class="headerlink" title="面向过程和面向对象的区别"></a>面向过程和面向对象的区别</h4><p><strong>面向过程</strong></p><p>优点：性能比面向对象好，因为类调用时需要实例化，开销比较大，比较消耗资源。<br>缺点：不易维护、不易复用、不易扩展</p><p><strong>面向对象</strong></p><p>优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统 更加灵活、更加易于维护<br>缺点：性能比面向过程差</p>]]></content>
      
      
      <categories>
          
          <category> 面向对象 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>for循环</title>
      <link href="/2023/07/09/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/for%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/07/09/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/for%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是最基本的for循环形式，for循环的格式为for(初始化;布尔表达式;更新){}，for循环语句是支持迭代的一种通用结构，是最有效、最灵活的循环结构。for(;;){}是for循环的死循环。</p><h3 id="for循环例子"><a href="#for循环例子" class="headerlink" title="for循环例子"></a>for循环例子</h3><ol><li>计算0-100之间奇数和偶数的和</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//计算0-100之间奇数和偶数的和</span></span><br><span class="line">       <span class="type">int</span> obbsum=<span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> evensum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">               evensum+=i;</span><br><span class="line">           &#125;<span class="keyword">else</span> obbsum+=i;</span><br><span class="line">       &#125;</span><br><span class="line">       System.out.println(evensum);</span><br><span class="line">       System.out.println(obbsum);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>输出1-1000之间能被5整除的数，并且每行输出三个</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//输出1-1000之间能被5整除的数，并且每行输出三个</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">15</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>打印九九乘法表</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//打印九九乘法表</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>; k &lt;= i; k++) &#123;</span><br><span class="line">            System.out.print(k+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+(i*k)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句:表达式)&#123;</span><br><span class="line">    <span class="comment">//代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是主要用于数组或集合的增强for循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] number = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">60</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(number[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:number)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">20</span><br><span class="line">30</span><br><span class="line">40</span><br><span class="line">60</span><br><span class="line">=================</span><br><span class="line">10</span><br><span class="line">20</span><br><span class="line">30</span><br><span class="line">40</span><br><span class="line">60</span><br><span class="line"></span><br><span class="line">进程已结束,退出代码0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由上诉例子可知增强for循环和普通的在用法上的区别</p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>while循环</title>
      <link href="/2023/07/08/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/while%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/07/08/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/while%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//输出1-100</span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用while循环大多数情况下都应避免死循环</p><h2 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//输出1-100</span></span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(i&lt;=<span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;*****************&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;<span class="keyword">while</span>(i==<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果为：</span></span><br><span class="line"><span class="comment">//*****************</span></span><br><span class="line"><span class="comment">//0</span></span><br></pre></td></tr></table></figure><p>这些也比较简单，但循环语句经常使用的是for循环</p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>选择结构</title>
      <link href="/2023/07/08/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
      <url>/2023/07/08/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><h2 id="if选择结构"><a href="#if选择结构" class="headerlink" title="if选择结构"></a>if选择结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">if</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    scanner.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是最基本的单向选择结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">if</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    scanner.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是双向选择结构，如果是，如何，否又如何</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">if</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;满分！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&lt;<span class="number">100</span>&amp;&amp;score&gt;=<span class="number">90</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(score&lt;<span class="number">90</span>&amp;&amp;score&gt;=<span class="number">60</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;良&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    scanner.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if后可跟多个else if从而进行多个方向选择</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">if</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(score == <span class="number">100</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;满分&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    scanner.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是if的嵌套结构，都很简单。</p><h2 id="switch选择结构"><a href="#switch选择结构" class="headerlink" title="switch选择结构"></a>switch选择结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">grade</span> <span class="operator">=</span> scanner.next();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;优秀&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;恭喜取得高分&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;良好&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;不错&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span>  <span class="string">&quot;不及格&quot;</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;再接再厉&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch在jdk7之后case后值可以是字符串类型</p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>用户交互Scanner类</title>
      <link href="/2023/07/05/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92Scanner%E7%B1%BB/"/>
      <url>/2023/07/05/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/%E7%94%A8%E6%88%B7%E4%BA%A4%E4%BA%92Scanner%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="用户交互Scanner类"><a href="#用户交互Scanner类" class="headerlink" title="用户交互Scanner类"></a>用户交互Scanner类</h1><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/Scanner%E4%BD%BF%E7%94%A8.png"></p><ol><li><p>基本语法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br></pre></td></tr></table></figure></li><li><p>通过Scanner类的next()与nextline()方法获取输入的字符串，在读取前我们一般需要使用hasNext()与hasnextLine()判断是否还有输入的数据。</p></li></ol><h2 id="next-与nextLine"><a href="#next-与nextLine" class="headerlink" title="next()与nextLine()"></a>next()与nextLine()</h2><ol><li><p>```java<br>public class demo01 {</p><pre><code>public static void main(String[] args) &#123;    System.out.println(&quot;请输入：&quot;);//输入Hello world!    Scanner scanner = new Scanner(System.in);    if(scanner.hasNext())&#123;        String str = scanner.next();        System.out.println(&quot;您输入的是：&quot;+str);//Hello    &#125;//凡是i/o流的类使用完后都需要关闭，不然会一直占用内存    scanner.close();&#125;</code></pre><p>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   可以发现Scnner类的next()函数在输入Hello world!的时候却只输出Hello。</span><br><span class="line"></span><br><span class="line">2. ```java</span><br><span class="line">   public class demo02 &#123;</span><br><span class="line">       public static void main(String[] args) &#123;</span><br><span class="line">           System.out.println(&quot;请输入：&quot;);//输入Hello world!</span><br><span class="line">   </span><br><span class="line">           Scanner scanner = new Scanner(System.in);</span><br><span class="line">   </span><br><span class="line">           if(scanner.hasNextLine())&#123;</span><br><span class="line">               String str = scanner.nextLine();</span><br><span class="line">               System.out.println(&quot;您输入的是：&quot;+str);//Hello world!</span><br><span class="line">           &#125;</span><br><span class="line">   </span><br><span class="line">           scanner.close();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>可以发现Scnner类的nextLine()函数在输入Hello world!输出Hello world!。</p><ul><li>next()<ol><li>一定要读取到有效字符后才可以结束输入。</li><li>对输入有效字符前遇到的空白，next()方法会自动将其去掉。</li><li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li><strong>next()不能得到带有空格的字符串。</strong></li></ol></li><li>nextLine()<ol><li>以Enter为结束符，也就是说nextLine()方法返回的是输入回车前的所以字符。</li><li>可以获得空白。</li></ol></li></ul><h3 id="scanner进阶"><a href="#scanner进阶" class="headerlink" title="scanner进阶"></a>scanner进阶</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0.0f</span>;</span><br><span class="line">        <span class="comment">//输入1.1</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;您输入的为整数：&quot;</span>+i);</span><br><span class="line">        &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;您输入的不为整数！&quot;</span>);<span class="comment">//您输入的不为整数！</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextFloat())&#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;您输入的小数为：&quot;</span>+f);</span><br><span class="line">        &#125;<span class="keyword">else</span> System.out.println(<span class="string">&quot;您输入的不为小数&quot;</span>);<span class="comment">//您输入的小数为：1.1</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scanner与判断语句结合。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">Double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNextDouble())&#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">v</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">            count++;</span><br><span class="line">            sum += v;</span><br><span class="line">            System.out.println(<span class="string">&quot;您输入的第&quot;</span>+count+<span class="string">&quot;个数为：&quot;</span>+v);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;您输入的数的和为：&quot;</span>+sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scanner与循环语句的结合</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础(3)</title>
      <link href="/2023/05/27/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%883%EF%BC%89%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2023/05/27/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%883%EF%BC%89%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="运算符问题"><a href="#运算符问题" class="headerlink" title="运算符问题"></a>运算符问题</h1><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><p>加减乘除模（取余）运算与幂运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//二元运算符</span></span><br><span class="line">        <span class="comment">//ctrl+d 复制当前行至下一行</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">35</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(a+b);            <span class="comment">//30</span></span><br><span class="line">        System.out.println(a-b);            <span class="comment">//-10</span></span><br><span class="line">        System.out.println(a*b);            <span class="comment">//200</span></span><br><span class="line">        System.out.println(a/b);            <span class="comment">//0     注意结果为小数时只会保留整数部分</span></span><br><span class="line">        System.out.println(d%c);            <span class="comment">//10</span></span><br><span class="line">        System.out.println(a/(<span class="type">double</span>)b);    <span class="comment">//0.5</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//幂运算</span></span><br><span class="line">        <span class="comment">//2^3 = 2*2*2 = 8   java中很多运算需要借助一些工具类</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">pow</span> <span class="operator">=</span> Math.pow(<span class="number">2</span>,<span class="number">3</span>);         <span class="comment">//2^3</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">pow1</span> <span class="operator">=</span> Math.pow(<span class="number">3</span>,<span class="number">2</span>);        <span class="comment">//3^2</span></span><br><span class="line">        System.out.println(pow);            <span class="comment">//8.0</span></span><br><span class="line">        System.out.println(pow1);           <span class="comment">//9.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1231231312131L</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(a+b+c+d);    <span class="comment">//long  1231231313339</span></span><br><span class="line">        System.out.println(b+c+d);      <span class="comment">//int   1208</span></span><br><span class="line">        System.out.println(c+d);        <span class="comment">//int   1008</span></span><br><span class="line">        <span class="comment">//System.out.println((String) (c+d));</span></span><br><span class="line">        <span class="comment">//Inconvertible types; cannot cast &#x27;int&#x27; to &#x27;java.lang.String&#x27;</span></span><br><span class="line">        <span class="comment">//整数型当有long时为long，否则结果为int类型，不管有没有int类型</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自减自增运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//自增，自减运算符      ++ --</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a++;</span><br><span class="line">        <span class="comment">//a++先附值后自增</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++a;</span><br><span class="line">        <span class="comment">//++a先自增后附值</span></span><br><span class="line">        System.out.println(a);      <span class="comment">//12</span></span><br><span class="line">        System.out.println(b);      <span class="comment">//10</span></span><br><span class="line">        System.out.println(c);      <span class="comment">//12</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p>大于小于等于不等于</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//关系运算符     布尔      true    false</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(a&gt;b);        <span class="comment">//false</span></span><br><span class="line">        System.out.println(a&lt;b);        <span class="comment">//true</span></span><br><span class="line">        System.out.println(a==b);       <span class="comment">//false</span></span><br><span class="line">        System.out.println(a!=b);       <span class="comment">//true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>与或非以及短路运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//逻辑运算符 与   或   非</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag1</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        System.out.println(flag1 &amp;&amp; flag);      <span class="comment">//false 逻辑与运算     两个都为真才为真</span></span><br><span class="line">        System.out.println(flag || flag1);      <span class="comment">//true  逻辑或运算     有一个为真就为真</span></span><br><span class="line">        System.out.println(!(flag1 &amp;&amp; flag));   <span class="comment">//true  逻辑非运算     真的为假，假的为真</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//短路运算，逻辑与运算当左边为假时不再执行右边</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> (a&lt;<span class="number">4</span>) &amp;&amp; (a++&lt;<span class="number">4</span>);</span><br><span class="line">        System.out.println(b);  <span class="comment">//false</span></span><br><span class="line">        System.out.println(a);  <span class="comment">//5 a = 5,所以右侧a++没有执行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>位运算是极快的运算方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo06</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        位运算</span></span><br><span class="line"><span class="comment">        A=0011 1100</span></span><br><span class="line"><span class="comment">        B=0000 1100</span></span><br><span class="line"><span class="comment">        A&amp;B = 0000 1100     与</span></span><br><span class="line"><span class="comment">        A|B = 0011 1100     或</span></span><br><span class="line"><span class="comment">        A^B = 0011 0000     异或</span></span><br><span class="line"><span class="comment">        ~A = 1100 0011      取反</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        0000 0000 0</span></span><br><span class="line"><span class="comment">        0000 0001 1</span></span><br><span class="line"><span class="comment">        0000 0010 2</span></span><br><span class="line"><span class="comment">        0000 0011 3</span></span><br><span class="line"><span class="comment">        0000 0100 4</span></span><br><span class="line"><span class="comment">        0000 1000 8</span></span><br><span class="line"><span class="comment">        0001 0000 16</span></span><br><span class="line"><span class="comment">        &lt;&lt;,&gt;&gt;   左移右移运算即乘2，除2运算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        2*8 = 16 = 2*2*2*2 = 2 &lt;&lt; 3</span></span><br><span class="line"><span class="comment">        极快运算</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);       <span class="comment">//16</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拓展赋值运算符"><a href="#拓展赋值运算符" class="headerlink" title="拓展赋值运算符"></a>拓展赋值运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//+=  -=  *=  /=</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        a += b;</span><br><span class="line">        System.out.println(a);  <span class="comment">//30    a = a+b</span></span><br><span class="line">        a -= b;</span><br><span class="line">        System.out.println(a);  <span class="comment">//10    a = a-b</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//三元运算符</span></span><br><span class="line">        <span class="comment">//x?y:z     如果x为true，则返回y，否则返回z</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> <span class="number">80</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">score1</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> score &lt; <span class="number">60</span> ? <span class="string">&quot;不及格&quot;</span> : <span class="string">&quot;及格&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result1</span> <span class="operator">=</span> score1 &lt; <span class="number">60</span> ? <span class="string">&quot;不及格&quot;</span> : <span class="string">&quot;及格&quot;</span>;</span><br><span class="line">        System.out.println(result); <span class="comment">//及格</span></span><br><span class="line">        System.out.println(result1);<span class="comment">//不及格</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//优先级问题 多使用括号()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详情请去观看<a href="%5BJava%E5%9F%BA%E7%A1%8007%EF%BC%9A%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV12J41137hu?p=27&vd_source=80fc77fb68fb80606062c4a21dd5f4c8)">【狂神说Java】Java零基础学习视频通俗易懂</a></p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础(2)</title>
      <link href="/2023/05/27/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/"/>
      <url>/2023/05/27/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="java基础-2"><a href="#java基础-2" class="headerlink" title="java基础(2)"></a>java基础(2)</h1><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.jpg" alt="数据类型转换"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//类型转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> i1;                <span class="comment">//低转高，自动转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">i3</span> <span class="operator">=</span> (<span class="type">byte</span>)i2;         <span class="comment">//高转低，强制转换 格式：（类型）变量名</span></span><br><span class="line">        System.out.println(i3);     <span class="comment">//10</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> <span class="number">128</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">i5</span> <span class="operator">=</span> (<span class="type">byte</span>)i4;</span><br><span class="line">        System.out.println(i5);     <span class="comment">//-128  溢出，byte -128 - 127</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===============&quot;</span>);</span><br><span class="line">        System.out.println((<span class="type">int</span>)<span class="number">2.7</span>);   <span class="comment">//2</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)-<span class="number">4.9</span>);  <span class="comment">//-4</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;===============&quot;</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i6</span> <span class="operator">=</span> c1 + <span class="number">1</span>;</span><br><span class="line">        System.out.println(i6);         <span class="comment">//98</span></span><br><span class="line">        System.out.println((<span class="type">char</span>)i6);   <span class="comment">//b</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类型转换注意问题：</p><ol><li>不能对布尔值进行转换</li><li>高转低需要进行强制转换</li><li>不能把对象类型转换为不相干的类型</li><li>转换过程中注意溢出问题和精度问题</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo4</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//操作比较大的数时，注意溢出问题！！！</span></span><br><span class="line">        <span class="comment">//JDK7特性，数字之间可以用下划线</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">10_0000_0000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> money*years;</span><br><span class="line">        System.out.println(total);          <span class="comment">//-1474836480</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> money*years;</span><br><span class="line">        System.out.println(total2);         <span class="comment">//-1474836480</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total3</span> <span class="operator">=</span> money*(<span class="type">long</span>)years;</span><br><span class="line">        System.out.println(total3);         <span class="comment">//20000000000</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>变量注意事项：</p><ol><li>每个变量都有类型，类型可以是基本类型，也可以是引用类型</li><li>变量名必须是合法的标识符</li><li>变量声明是一条完整的语句，因此每一个声明都必须以分号结束</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo6</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性：变量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//常量</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">    <span class="comment">//修饰符前后顺序没有要求</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">MAX_VALUE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">double</span> <span class="variable">MIN_VALUE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//类变量</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">adress</span> <span class="operator">=</span> <span class="string">&quot;中国&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例变量</span></span><br><span class="line">    <span class="comment">//可不初始化，默认值为0 0.0</span></span><br><span class="line">    <span class="comment">//boolean类型默认值为false</span></span><br><span class="line">    <span class="comment">//基本数据类型外其他数据类型默认值为null</span></span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="comment">//main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//局部变量      必须声明并初始化</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        System.out.println(i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实例变量</span></span><br><span class="line">        <span class="type">Demo6</span> <span class="variable">demo6</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo6</span>();</span><br><span class="line">        System.out.println(demo6.j);        <span class="comment">//0</span></span><br><span class="line">        System.out.println(demo6.name);     <span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//类变量</span></span><br><span class="line">        System.out.println(adress);         <span class="comment">//中国</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//其他方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(i);            局部变量有范围</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量命名规范：</p><ol><li>所有变量、方法、类名：见名知意</li><li>类成员变量：首字母小写和驼峰原则：monthSalary</li><li>局部变量：首字母小写和驼峰原则：studentName</li><li>常量：大写字母和下划线：MAX_VALUE</li><li>类名：首字母大写和驼峰原则：Man，GoodMan</li><li>方法名：首字母小写和驼峰原则：add(),sumAdd()</li></ol>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java数据类型拓展和转义符</title>
      <link href="/2023/05/26/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/Java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%8B%93%E5%B1%95%E5%92%8C%E8%BD%AC%E4%B9%89%E7%AC%A6/"/>
      <url>/2023/05/26/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/Java%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%8B%93%E5%B1%95%E5%92%8C%E8%BD%AC%E4%B9%89%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="java数据类型拓展"><a href="#java数据类型拓展" class="headerlink" title="java数据类型拓展"></a>java数据类型拓展</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//整数型拓展     进制  二进制 0b  八进制 0   十进制     十六进制 0x</span></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">010</span>;   <span class="comment">//八进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">0x10</span>;  <span class="comment">//十六进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> <span class="number">0b10</span>;  <span class="comment">//二进制</span></span><br><span class="line">        System.out.println(i1); <span class="comment">//10</span></span><br><span class="line">        System.out.println(i2); <span class="comment">//8</span></span><br><span class="line">        System.out.println(i3); <span class="comment">//16</span></span><br><span class="line">        System.out.println(i4); <span class="comment">//2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//浮点型拓展     银行业务怎么表示？ 钱</span></span><br><span class="line">        <span class="comment">//BigDecimal    数学</span></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//float     有限  离散  舍入误差    大约  接近但不等于</span></span><br><span class="line">        <span class="comment">//double</span></span><br><span class="line">        <span class="comment">//最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">0.1f</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.0</span>/<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(f1==d);<span class="comment">//false</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> <span class="number">123123123123123f</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> f2 + <span class="number">1</span>;</span><br><span class="line">        System.out.println(f2==f3);<span class="comment">//true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//字符拓展</span></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;中&#x27;</span>;</span><br><span class="line">        System.out.println(c1);         <span class="comment">//a</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)c1);    <span class="comment">//97</span></span><br><span class="line">        System.out.println(c2);         <span class="comment">//中</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)c2);    <span class="comment">//20013</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">//编码    Unicode 表：（97 = a 65 = A）   2字节     0 - 65536   Excel   2^16 = 65536</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\u0061&#x27;</span>;</span><br><span class="line">        System.out.println(c3); <span class="comment">//a</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//字符串拓展</span></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        System.out.println(s1==s2); <span class="comment">//false</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">        System.out.println(s3==s4); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=============================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="comment">//boolean拓展</span></span><br><span class="line">        <span class="comment">//========================================================</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;&#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="literal">true</span>)&#123;&#125;<span class="comment">//等价</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//转义字符</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png" alt="转义字符"></p>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java基础(1)</title>
      <link href="/2023/05/25/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/"/>
      <url>/2023/05/25/java%E4%B9%8B%E8%B7%AF/Java%E5%9F%BA%E7%A1%80/java%E5%9F%BA%E7%A1%80%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="java基础-1"><a href="#java基础-1" class="headerlink" title="java基础(1)"></a>java基础(1)</h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Java注释共有三种，行注释，块注释和文档注释。</p><ul><li><p>行注释为双斜杠</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//行注释</span></span><br></pre></td></tr></table></figure></li><li><p>块注释为斜杠加星号开始，星号加斜杠结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">块注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li><li><p>文档注释为斜杠加双星号开始，星号加斜杠结束</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">doc</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>编写程序时给自己的代码写注释是非常重要的习惯</strong></p></li></ul><h2 id="标识符和关键字"><a href="#标识符和关键字" class="headerlink" title="标识符和关键字"></a>标识符和关键字</h2><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p><strong>Java所有组成部分都需要名字。类名、变量名以及方法名都被称为标识符</strong></p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/Java%E5%85%B3%E9%94%AE%E5%AD%97.png" alt="java关键字"></p><h3 id="标识符注意点（命名规则）"><a href="#标识符注意点（命名规则）" class="headerlink" title="标识符注意点（命名规则）"></a>标识符注意点（命名规则）</h3><ol><li><p>由26个英文字母大小写，0-9，_ 或 $ 组成。</p></li><li><p>数字不可以开头。</p></li><li><p>不可以使用关键字（class、int等）和保留字（goto和const），但能包含关键字和保留字。</p></li><li><p><strong>Java中严格区分大小写</strong>，长度无限制。（例：class×，Class√）</p></li><li><p>标识符不能包含空格。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">v1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">v2</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>; <span class="comment">//String不是关键字，是类</span></span><br><span class="line"><span class="comment">//int 1v = 10;数字不可以开头</span></span><br><span class="line"><span class="comment">//String 2v = &quot;Hello&quot;;数字不可以开头</span></span><br><span class="line"><span class="comment">//int v1 = 12;v1已被定义，不可重复定义</span></span><br><span class="line"><span class="comment">//int v3 = &quot;Hello&quot;;int定义整数型变量，不能将字符串类型赋给字符型变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">_v4</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">$v5</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment">//int #v6 = 23;标识符由26个英文字母大小写，0-9，_ 或 $ 组成</span></span><br><span class="line"><span class="comment">//int -v7 = 78;标识符由26个英文字母大小写，0-9，_ 或 $ 组成</span></span><br><span class="line"><span class="type">int</span> <span class="variable">class1</span> <span class="operator">=</span> <span class="number">67</span>;</span><br><span class="line"><span class="comment">//int class = 77;class为关键字，不能使用关键字作为变量</span></span><br><span class="line"><span class="type">int</span> <span class="variable">v8_20230525</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment">//int v9 20230525 = 100标识符不能包含空格</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><strong>Java语言是强类型语言</strong>（要求变量使用严格符合规定，所有变量都必须先定义后使用）</p><p>Java数据类型分为两种，基本类型和引用类型（类、接口、数组）</p><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>基本数据类型又分为数值类型和布尔类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">demo1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//整数型</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">v1</span> <span class="operator">=</span> <span class="number">10</span>;               <span class="comment">//一个字节,-128~127</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">v3</span> <span class="operator">=</span><span class="number">30</span>;               <span class="comment">//两个字节</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">v2</span> <span class="operator">=</span> <span class="number">20</span>;                <span class="comment">//四个字节</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">v4</span> <span class="operator">=</span><span class="number">40L</span>;               <span class="comment">//八个字节,long类型要在数值后加大写L</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//浮点型</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">v5</span> <span class="operator">=</span> <span class="number">10.1F</span>;           <span class="comment">//四个字节,float类型要在数值后加大写F</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">v6</span> <span class="operator">=</span> <span class="number">20.2</span>;           <span class="comment">//八个字节</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符类型</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">v8</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;              <span class="comment">//两个字节</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">v9</span> <span class="operator">=</span> <span class="string">&#x27;中&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//布尔类型</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;        <span class="comment">//boolean类型占一位</span></span><br><span class="line">        <span class="comment">//boolean flag = false;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        字符串,String不是基本数据类型,String不是关键字,是类</span></span><br><span class="line"><span class="comment">        String v7 = &quot;Hello&quot;;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png"></p><h4 id="字节"><a href="#字节" class="headerlink" title="字节"></a>字节</h4><p><strong>位</strong>：是计算机内部数据存储的最小单位，11001100是一个八位二进制数。</p><p><strong>字节</strong>：是计算机中数据处理的基本单位，习惯上用大写 B表示，1B（byte，字节）=8bit（位）</p><p><strong>字符</strong>：是指计算机中使用的字母、数字、字和符号</p><ul><li>1bit表示一位</li><li>1Byte表示一个字节，1B=8b</li><li>1024B=1KB</li><li>1024KB=1M</li><li>1024M=1G</li></ul>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HelloWorld程序</title>
      <link href="/2023/05/22/java%E4%B9%8B%E8%B7%AF/Java%E5%85%A5%E9%97%A8/HelloWorld%E7%A8%8B%E5%BA%8F/"/>
      <url>/2023/05/22/java%E4%B9%8B%E8%B7%AF/Java%E5%85%A5%E9%97%A8/HelloWorld%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HelloWorld程序"><a href="#HelloWorld程序" class="headerlink" title="HelloWorld程序"></a>HelloWorld程序</h1><h2 id="程序编写"><a href="#程序编写" class="headerlink" title="程序编写"></a>程序编写</h2><ol><li><p>在某一文件夹（建议建立专门存放代码的文件夹）新建文本，重命名为Hello.java。然后用notepad++打开（记事本也可，建议notepad++），然后编写hello world程序，编写完毕后保存退出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hello</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       <span class="comment">//(IDEA)psvm+回车可以直接快捷生产public static void main(String[] args) &#123;&#125;</span></span><br><span class="line">       System.out.println(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line">       <span class="comment">//(IDEA)sout+回车可以直接快捷生成System.out.println();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p> 在该文件夹处打开命令提示符（在地址栏前输入cmd+空格回车），或打开命令提示符后进入该文件夹。</p></li></ol><p>   <img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E5%99%A8%E8%BF%9B%E5%85%A5%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E7%95%8C%E9%9D%A2.png" alt="资源管理器进入命令提示符界面"></p><ol start="3"><li><p>输入命令javac+空格+文件名（这里是Hello.java）,若没有报错，此时该文件内会生成一个<strong>Hello.class</strong>文件。若报javac错误或未生产.class文件，请输入java -version检测java是否成功安装，若代码报错，请检查代码。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/.class%E6%96%87%E4%BB%B6.png" alt=".class文件"></p></li><li><p>输入java+空格+文件名（这里是Hello，<strong>不用加.class</strong>），输出Hello,world!。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/%E8%BE%93%E5%87%BAHelloWorld.png">                       </p></li></ol>]]></content>
      
      
      <categories>
          
          <category> java入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JDK安装(8)与删除</title>
      <link href="/2023/05/22/java%E4%B9%8B%E8%B7%AF/Java%E5%85%A5%E9%97%A8/JDK%E5%AE%89%E8%A3%85(8)%E4%B8%8E%E5%88%A0%E9%99%A4/"/>
      <url>/2023/05/22/java%E4%B9%8B%E8%B7%AF/Java%E5%85%A5%E9%97%A8/JDK%E5%AE%89%E8%A3%85(8)%E4%B8%8E%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h1><h2 id="JDK删除"><a href="#JDK删除" class="headerlink" title="JDK删除"></a>JDK删除</h2><ol><li><p>我的电脑右键属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量，查看JAVA_HOME文件所在，shift+delete删除文件夹，回到系统变量删除JAVA_HOME和Path中与JAVA_HOME相关变量。win+r打开运行窗口输入cmd，打开命令行窗口，输入java -version看是否删除完全，若无，看2。</p></li><li><p>win+r打开运行窗口输入cmd，打开命令行窗口，输入regedit打开注册表，打开HKEY_LOCAL_MACHINE,打开SOFTWARE，删除JAVASOFT相关文件夹，打开控制面板（运行窗口输入control回车），打开程序与功能，删除相关JDK即可。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/JDK%E6%B3%A8%E5%86%8C%E8%A1%A8%E4%BD%8D%E7%BD%AE.png" alt="JDK注册表位置"></p></li></ol><h2 id="JDK8安装即环境配置"><a href="#JDK8安装即环境配置" class="headerlink" title="JDK8安装即环境配置"></a>JDK8安装即环境配置</h2><ol><li><p>浏览器直接搜索jdk8，进入oracle网站登录，<strong>根据自身电脑操作系统</strong>下载jdk即可（如，64位windows系统下载windows栏里x64 installer）</p></li><li><p>下载完成后选择自己想要安装的位置（<strong>记住安装的位置</strong>）安装即可。</p></li><li><p>安装完成后，打开上一标题中系统变量位置，新建JAVA_HOME，变量值极为上述要记住的安装位置。然后打开Path，新建%JAVA_HOME%\bin和%JAVA_HOME%\jre\bin，然后打开命令行窗口输入java -version检测是否成功安装。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/JDK8%E4%B8%8B%E8%BD%BD%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9.png" alt="JDK8下载操作系统选择"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> java入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机简单发展历史</title>
      <link href="/2023/05/05/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%80%E5%8D%95%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/"/>
      <url>/2023/05/05/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%AE%80%E5%8D%95%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机的简单发展历史"><a href="#计算机的简单发展历史" class="headerlink" title="计算机的简单发展历史"></a>计算机的简单发展历史</h1><h2 id="计算机语言发展史"><a href="#计算机语言发展史" class="headerlink" title="计算机语言发展史"></a>计算机语言发展史</h2><h3 id="第一代语言"><a href="#第一代语言" class="headerlink" title="第一代语言"></a>第一代语言</h3><p>第一代语言即机器语言，我们都知道计算机的基本运算方式都是基于二进制的的方式。这种语言本质上是计算机能识别的唯一语言，是直接输入给计算机使用的，不经过任何转化！以后的语言就是在这个的基础上简化而来。虽然后来发展的语言能让人类直接理解但最终送入计算机的还是这种机器语言。</p><h3 id="第二代语言"><a href="#第二代语言" class="headerlink" title="第二代语言"></a>第二代语言</h3><p>第二代语言即汇编语言，汇编语言用指令代替二进制（用助记符代替了操作码，用地址符号或标号代替地址码），解决了人类无法读懂机器语言的问题，比起机器语言，汇编大大进步了。尽管还是复杂，用起来容易出错，但在计算机语言发展史上是机器语言向更高级的语言进化的桥梁。</p><h4 id="面向应用"><a href="#面向应用" class="headerlink" title="面向应用"></a>面向应用</h4><ul><li>逆向工程</li><li>机器人</li><li>病毒</li><li>······</li></ul><h3 id="第三代语言"><a href="#第三代语言" class="headerlink" title="第三代语言"></a>第三代语言</h3><p>第三代语言即高级语言，主要分为面向过程，如C，和面向对对象，如java、c++。高级语言是一种接近于人们使用习惯的程序设计语言。它允许用英文写计算程序，程序中的符号和算式也与日常用的数学式子差不多。现在，计算机语言仍然在不断的发展，种类也相当多，比如 FORTRAN语言， COBOL语言，C++，C#，python等等。</p><h4 id="摩尔定律"><a href="#摩尔定律" class="headerlink" title="摩尔定律"></a>摩尔定律</h4><p>当价格不变的同时每过18个月，集体管的数目将会增加一倍，性能也会提高一倍。</p><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/R-C.jpg"></p><h2 id="关于硬件"><a href="#关于硬件" class="headerlink" title="关于硬件"></a>关于硬件</h2><p>关于计算机从硬件方面的发展，可以分为四代：</p><ol><li><p>1946-1957年的电子管时代。特点是逻辑元件采用电子管；机器语言编程，主存用延迟线或者是磁鼓存储信息。容量极小；体积庞大，成本高；运算速度较低。</p></li><li><p>1958-1964年的晶体管时代。特点是逻辑元件采用晶体管；高级语言编程，主存用磁心存储器。速度提高了几十倍达到了几万次几十万此一秒。到此有了操作系统的雏形。</p></li><li><p>1965-1971年的中小规模集成电路时代。特点是逻辑元件采用中小规模集成电路；高级语言编程；主存采用了半导体存储器；开始有了分时操作系统。</p></li><li><p>1972年-今天的大规模集成电路时代。特点是逻辑元件采用了大规模的集成电路；高级语言编程；有了微处理器。并且并行，流水线，高速缓冲区和虚拟存储器等概念也被用到这一代计算机中。</p><p>具体可学习计算机组成原理。</p><p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.023b98ef7c7d6859c6e7674af870bc75?rik=N8aTtLdqfJR35Q&riu=http://5b0988e595225.cdn.sohucs.com/images/20171105/943ab9562c0343238ad88aa4f7cadff2.jpeg&ehk=+PgB8ARXILJssR2sFGFd5lZCQZ4mze9dK2cpLv9h4LE=&risl=&pid=ImgRaw&r=0" alt="计算机发展"></p><h3 id="第一台计算机"><a href="#第一台计算机" class="headerlink" title="第一台计算机"></a>第一台计算机</h3><p>在1946年诞生了第一台电子数字计算机（ENIAC）。</p><h2 id="重要人物"><a href="#重要人物" class="headerlink" title="重要人物"></a>重要人物</h2><ul><li><p><strong>冯·诺依曼</strong></p></li><li><p><strong>阿兰·麦席森·图灵</strong></p></li><li><p><strong>克劳德·香农</strong></p></li><li><p><strong>赫伯特•亚历山大•西蒙</strong></p><p>具体可参考知乎的文章：<a href="https://zhuanlan.zhihu.com/p/436098834">计算机发展中的重要人物!</a></p><p><img src="https://pic1.zhimg.com/v2-4e1522ab2cfa4dd4f30b986f8214b2f3_720w.jpg?source=172ae18b"></p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> java预科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DOS常用命令</title>
      <link href="/2023/04/27/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/DOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/04/27/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/DOS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DOS常用命令"><a href="#DOS常用命令" class="headerlink" title="DOS常用命令"></a>DOS常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#盘符切换</span></span><br><span class="line">D:</span><br><span class="line">F:</span><br><span class="line"><span class="comment">#查看目录下的所有文件 dir</span></span><br><span class="line"><span class="comment">#切换目录cd(change directory)</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="built_in">cd</span> /d E:/blog</span><br><span class="line"><span class="comment">#返回上一级</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment">#清理屏幕 cls(clear screen)</span></span><br><span class="line"><span class="comment">#退出终端 exit</span></span><br><span class="line"><span class="comment">#查看电脑的IP ipconfig</span></span><br><span class="line"><span class="comment">#打开应用</span></span><br><span class="line">calc<span class="comment">#计算器</span></span><br><span class="line">mspaint<span class="comment">#画图</span></span><br><span class="line">notepad<span class="comment">#笔记本</span></span><br><span class="line"><span class="comment">#ping命令</span></span><br><span class="line">ping www.baidu.com</span><br><span class="line"><span class="comment">#文件操作</span></span><br><span class="line">md目录名</span><br><span class="line">rd目录名</span><br><span class="line"><span class="built_in">cd</span>&gt;文件名</span><br><span class="line">del文件名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java预科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机预科</title>
      <link href="/2023/04/25/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%A2%84%E7%A7%91/"/>
      <url>/2023/04/25/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%A2%84%E7%A7%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="计算机预科"><a href="#计算机预科" class="headerlink" title="计算机预科"></a>计算机预科</h1><h2 id="什么是计算机"><a href="#什么是计算机" class="headerlink" title="什么是计算机"></a>什么是计算机</h2><ul><li>计算机，全称电子计算机（computer），俗称电脑。是能够按照<strong>程序</strong>运行，自动、高速处理海量数据的现代化智能电子设备。</li><li>计算机由<strong>软件</strong>和<strong>硬件</strong>组成，没有安装任何软件的计算机称为裸机。</li><li>计算机可分为超级计算机、工业控制计算机、网络计算机、个人计算机、嵌入式计算机五类，较先进的计算机有生物计算机、光子计算机、量子计算机等。</li></ul><img src="https://img95.699pic.com/photo/50053/7402.jpg_wh860.jpg" style="zoom:50%;" /><h2 id="硬件及冯诺依曼结构"><a href="#硬件及冯诺依曼结构" class="headerlink" title="硬件及冯诺依曼结构"></a>硬件及冯诺依曼结构</h2><ul><li>硬件：一些物理装置按系统的要求构成一个有机整体为计算机软件运行提供物质基础。</li><li>计算机硬件组成包括CPU、主板、内存、电源、主机箱、硬盘、显卡等可以看的到的器件。</li></ul><h3 id="装机"><a href="#装机" class="headerlink" title="装机"></a>装机</h3><p>​        装机时不可少的是CPU、Memory(内存)、Motherboard(主板)和IO(Input/Output)设备。</p><img src="https://ts1.cn.mm.bing.net/th/id/R-C.73ae9bd9019b2fee7433970a734aad1a?rik=ZFJ1%2bxdEYINQOA&riu=http%3a%2f%2fimg2.expreview.com%2fimg%2freview%2fMSIZ77review%2fOndaZ77_01b.jpg&ehk=VPITYlrKxWIUyGKT3DO5%2bv6C6KcJ6NK%2fCyg80CaPKmE%3d&risl=&pid=ImgRaw&r=0" alt="主板" style="zoom: 25%;" /><ul><li>CPU：中央处理器，被称为电脑的心脏，负责运算和控制，计算机的大脑，参考指标：主频，缓存，核数。</li><li>显卡：是计算机中最重要的图像输出设备。主要掌控了你玩游戏和作图的流畅性。</li><li>内存：它是计算机中的一个中间件。解决了CPU和硬盘之间速度严重不对等的问题，是CPU和硬盘数据交互的桥梁。</li><li>主板：负责将所有的设备直接或间接连接起来。板的好坏直接决定了计算机速度的快慢和运行稳定。同时主板也提供了大量的设备接口，为计算机扩展功能提供了可能。</li><li>硬盘：硬盘 负责储存数据。也就是说它决定了你可以存储多少东西。（分为机械和固态两种）</li><li>IO设备：是将数据输入计算机或接收计算机输出的设备。</li></ul><h2 id="冯诺依曼结构"><a href="#冯诺依曼结构" class="headerlink" title="冯诺依曼结构"></a>冯诺依曼结构</h2><p>​        冯诺依曼体系是美国叙利亚数学家冯诺依曼在1964年提出的存储程序原理，把程序当作数据来对待，程序和该程序处理的数据用同样的方式储存。当前最先进的计算机都是采用冯诺依曼体系结构，这也是冯诺依曼是数字计算机之父的重要原因。下面我们从一下几个方面介绍冯诺依曼体系结构。</p><h3 id="五大组成"><a href="#五大组成" class="headerlink" title="五大组成"></a>五大组成</h3><ol><li><strong>存储器</strong>是用来存放数据和程序的。</li><li><strong>运算器</strong>主要运行算数运算和逻辑运算，并将中间结果暂存到运算器中。</li><li><strong>控制器</strong>主要用来控制和指挥程序和数据的输入运行，以及处理运算结果。</li><li><strong>输入设备</strong>用来将人们熟悉的信息形式转换为机器能够识别的信息形式，常见的有键盘，鼠标等。</li><li><strong>输出设备</strong>可以将机器运算结果转换为人们熟悉的信息形式，如打印机输出，显示器输出等。</li></ol><img src="https://img-blog.csdnimg.cn/20200227134237297.png" alt="20200227134237297.png (1000×525) (csdnimg.cn)" style="zoom:50%;" /><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>计算机处理的数据和指令一律用二进制数表示</li><li>顺序执行程序。计算机运行过程中，把要执行的程序和处理的数据首先存入主存储器（内存），计算机执行程序时，将自动地并按顺序从主存储器中取出指令一条一条地执行，这一概念称作顺序执行程序。</li><li>计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成。</li></ol><blockquote><p>该部分摘自CSDN博主「Princess$」的原创文章，原文链接：<a href="https://blog.csdn.net/qq_45136189/article/details/104534228">https://blog.csdn.net/qq_45136189/article/details/104534228</a></p></blockquote><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li>计算机软件可以使计算机按照事先预定好的顺序完成特定的功能</li><li>计算机软件分为<strong>系统软件</strong>和<strong>应用软件</strong></li><li>系统软件包括DOS(Disk Operating System)，Windows，Linux，Unix，Mac，Android，IOS等。</li><li>应用软件包括QQ，微信，穿越火线，cs，美团等</li></ul><img src="https://ts1.cn.mm.bing.net/th/id/R-C.bf91cb60209992e8ed1089956cf553b9?rik=qIe9tcVBs3d59w&riu=http%3a%2f%2fimage.qianye88.com%2fpic%2f3743879575a9403b382e497a9dd23618&ehk=1LeCgZXFiErEkYE5YLF1tz2j129k6lWpSaBrmxL1KXk%3d&risl=&pid=ImgRaw&r=0" alt="穿越火线" style="zoom: 33%;" />]]></content>
      
      
      <categories>
          
          <category> java预科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown语法</title>
      <link href="/2023/04/24/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/MarkDown%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/04/24/java%E4%B9%8B%E8%B7%AF/Java%E9%A2%84%E7%A7%91/MarkDown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MarkDown语法"><a href="#MarkDown语法" class="headerlink" title="MarkDown语法"></a>MarkDown语法</h1><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>几级标题即几个#号加空格后加标题名称（支持六级标题）</p><h2 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h2><p>**hello,world!*<em>（字体加粗即在要加粗字体两侧加两个</em>）</p><p><em>hello,world!</em> （斜体即在要变为斜体的部分两侧加一个*）</p><p><em><strong>hello,world!</strong></em> （斜体加粗，即两侧加三个*）</p><p><del>hello,world!</del>（字体中间划线即两侧加两个波浪号~~）</p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="www.baidu.com">百度</a></p><p>超链接即中括号内写标题后跟括号写链接</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ol><li><p>可直接使用Typora右键导入表格</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table></li><li><p>输入表头（如：名字，年龄，性别）</p><p>名字|年龄|性别</p><p>–|–|–|</p><p>后接内容，格式与表头保持一致（李明|28|男），后进入源代码模式，使其变为一行后退出源代码模式即可。</p></li></ol><table><thead><tr><th>姓名</th><th>年龄</th><th>性别</th></tr></thead><tbody><tr><td>李明</td><td>28</td><td>男</td></tr></tbody></table><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>有序即数字加点加空格</p><ol><li>第一</li><li>第二行</li></ol><p>无序即减号直接加空格</p><ul><li>apple</li><li>banana</li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>MarkDown</p></blockquote><p>引用就直接大于号加空格。</p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>—或三个***加回车</p><hr><p>（三个—）</p><hr><p>（三个***）</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://cdn.jsdelivr.net/gh/penuy/picture/img/1.jpg" alt="本地图"></p><p>本地图即感叹号加中括号（中括号内写图片名字）加括号（括号内写图片存储地址地址）</p><p><img src="https://img.zcool.cn/community/014bfd577a0da00000018c1b587a4a.png@1280w_1l_2o_100sh.png" alt="网图（占位图）"></p><p>网络图片即把地址写为图片网络链接。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MarkDown</span>&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">MarkDown</span>()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;helloworld!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三个```后加所使用编码语言即可编写代码块。</p><p><code>hello</code></p><p>也可在两侧加`写代码块。</p>]]></content>
      
      
      <categories>
          
          <category> java预科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/02/hello-world/"/>
      <url>/2023/03/02/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
